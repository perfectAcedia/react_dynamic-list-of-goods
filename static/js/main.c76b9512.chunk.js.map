{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","React","memo","goods","map","good","style","color","name","id","getAll","fetch","then","response","json","catch","Error","Action","App","useState","visibleGoods","setVisibleGoods","AllGoods","handleAction","setHandleAction","listOfGoods","useCallback","listOfFiveGoods","sort","good1","good2","localeCompare","slice","listOfRedGoods","filter","useEffect","goodsFromServer","FirstFive","OnlyRed","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uOAQaA,EAA6BC,IAAMC,MAC9C,gBAAGC,EAAH,EAAGA,MAAH,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAM,GAAD,OAAKF,EAAKE,QAH1B,SAKGF,EAAKG,MAJDH,EAAKI,Y,OCRb,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,WACL,MAAM,IAAIC,MAAM,2BAIf,ICPIC,G,SAAAA,K,qBAAAA,E,uBAAAA,E,eAAAA,M,KAMJ,IAAMC,EAAgB,WAC3B,MAAwCC,mBAAiB,IAAzD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAwCF,mBAASF,EAAOK,UAAxD,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAcC,uBAAY,kBAAMhB,MAAU,IAC1CiB,EAAkBD,uBAAY,kBDH7BhB,IACJE,MAAK,SAAAT,GAAK,OAAI,YAAIA,GAAOyB,MAAK,SAACC,EAAOC,GACrC,OAAOD,EAAMrB,KAAKuB,cAAcD,EAAMtB,SACrCwB,MAAM,EAAG,QCAyC,IACjDC,EAAiBP,uBAAY,kBDG5BhB,IACJE,MAAK,SAAAT,GAAK,OAAIA,EAAM+B,QAAO,SAAA7B,GAC1B,MAAsB,QAAfA,EAAKE,cCLwC,IA6BxD,OA3BA4B,qBAAU,WAER,OAAQZ,GACN,KAAKN,EAAOK,SACVG,IACGb,MAAK,SAAAwB,GACJf,EAAgBe,MAEpB,MACF,KAAKnB,EAAOoB,UACVV,IACGf,MAAK,SAAAwB,GACJf,EAAgBe,MAGpB,MAEF,KAAKnB,EAAOqB,QACVL,IACGrB,MAAK,SAAAwB,GACJf,EAAgBe,SAKvB,CAACb,IAGF,sBAAKgB,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMjB,EAAgBP,EAAOK,WAHxC,4BAQA,wBACEkB,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMjB,EAAgBP,EAAOoB,YAHxC,gCAQA,wBACEG,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMjB,EAAgBP,EAAOqB,UAHxC,4BAQA,cAACtC,EAAD,CAAWG,MAAOiB,QCxExBsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c76b9512.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(\n  ({ goods }) => (\n    <ul>\n      {goods.map(good => (\n        <li\n          key={good.id}\n          data-cy=\"good\"\n          style={{ color: `${good.color}` }}\n        >\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  ),\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json())\n    .catch(() => {\n      throw new Error('Something went wrong');\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => [...goods].sort((good1, good2) => {\n      return good1.name.localeCompare(good2.name);\n    }).slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => {\n      return good.color === 'red';\n    }));\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nconst enum Action {\n  AllGoods = 'all-goods',\n  FirstFive = 'first-five',\n  OnlyRed = 'red',\n}\n\nexport const App: React.FC = () => {\n  const [visibleGoods, setVisibleGoods] = useState<Good[]>([]);\n  const [handleAction, setHandleAction] = useState(Action.AllGoods);\n\n  const listOfGoods = useCallback(() => getAll(), []);\n  const listOfFiveGoods = useCallback(() => get5First(), []);\n  const listOfRedGoods = useCallback(() => getRedGoods(), []);\n\n  useEffect(() => {\n    // eslint-disable-next-line default-case\n    switch (handleAction) {\n      case Action.AllGoods:\n        listOfGoods()\n          .then(goodsFromServer => {\n            setVisibleGoods(goodsFromServer);\n          });\n        break;\n      case Action.FirstFive:\n        listOfFiveGoods()\n          .then(goodsFromServer => {\n            setVisibleGoods(goodsFromServer);\n          });\n\n        break;\n\n      case Action.OnlyRed:\n        listOfRedGoods()\n          .then(goodsFromServer => {\n            setVisibleGoods(goodsFromServer);\n          });\n\n        break;\n    }\n  }, [handleAction]);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => setHandleAction(Action.AllGoods)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => setHandleAction(Action.FirstFive)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => setHandleAction(Action.OnlyRed)}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}